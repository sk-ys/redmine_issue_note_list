<!-- This program is based on redmine/app/views/issues/index.html.erb -->
<% content_for :header_tags do %>
  <%= stylesheet_link_tag "issue_note_list", plugin: "redmine_issue_note_list" %>
  <%= javascript_include_tag "issue_note_list", plugin: "redmine_issue_note_list" %>
  <%= javascript_tag type: "application/javascript" do -%>
    var IssueNoteList = IssueNoteList || {};
    IssueNoteList.resources = {
      labelClosePopOut: "<%= l(:label_close_pop_out, scope: :issue_note_list) %>",
      labelFixToLeft: "<%= l(:label_fix_to_left, scope: :issue_note_list) %>",
      labelFixToRight: "<%= l(:label_fix_to_right, scope: :issue_note_list) %>",
      labelFixToTop: "<%= l(:label_fix_to_top, scope: :issue_note_list) %>",
      labelFixToBottom: "<%= l(:label_fix_to_bottom, scope: :issue_note_list) %>",
      labelMaximize: "<%= l(:label_maximize, scope: :issue_note_list) %>",
      labelRestore: "<%= l(:label_restore, scope: :issue_note_list) %>",
      textSubmitAllConfirmation: "<%= l(:text_submit_all_confirmation, scope: :issue_note_list) %>",
    }
  <% end -%>
  <style>
    table.list.issues > tbody > tr.issue > td { height: <%=@query.notes_field_height%>px; }
  </style>
<% end %>
<div class="contextual">
  <% if User.current.allowed_to?(:add_issues, @project, global: true) && (@project.nil? || Issue.allowed_target_trackers(@project).any?) %>
    <%= link_to l(:label_issue_new), _new_project_issue_path(@project), class: "icon icon-add new-issue" %>
  <% end %>
  <%= actions_dropdown do %>
    <% if @project %>
      <%= link_to l(:field_summary), project_issues_report_path(@project), class: "icon icon-stats" %>
    <% end %>
    <% if User.current.allowed_to?(:import_issues, @project, global: true) %>
      <%= link_to l(:button_import), new_issues_import_path(project_id: @project), class: "icon icon-import" %>
    <% end %>
    <%= link_to_if_authorized l(:label_settings),
              {controller: "projects", action: "settings", id: @project, tab: "issues"},
              class: "icon icon-settings" if User.current.allowed_to?(:edit_project, @project) %>
  <% end %>
</div>
<h2><%= @query.new_record? ? l(:redmine_issue_note_list) : @query.name %></h2>
<% html_title(@query.new_record? ? l(:redmine_issue_note_list) : @query.name) %>
<%= form_tag(_project_issue_note_list_index_path(@project), method: :get, id: "query_form") do %>
  <p id="issue_note_list_query">
    <%= hidden_field_tag 'issue_note_list', '1' %>
    <span>
      <%= label_tag :number_of_notes, l(:label_number_of_notes, scope: :issue_note_list) %>
      <%= number_field_tag :number_of_notes, @query.number_of_notes, min: 1, max: 10, autocomplete: false %>
    </span>
    <span>
      <%= check_box_tag :enable_compact_mode, 1, @query.enable_compact_mode,
        onclick: "IssueNoteList.fn.collapseNoteRow('all', this.checked)" %>
      <%= label_tag :enable_compact_mode, l(:label_enable_compact_mode, scope: :issue_note_list) %>
    </span>
    <span>
      <%= check_box_tag :enable_variable_height, 1, @query.enable_variable_height,
        onclick: "IssueNoteList.fn.setNoteHeightVariable('all', this.checked)" %>
      <%= label_tag :enable_variable_height, l(:label_variable_height, scope: :issue_note_list) %>
    </span>
    <span id="notes_field_height_outer">
      <%= label_tag :notes_field_height, l(:label_notes_field_height, scope: :issue_note_list) %>
      <%= number_field_tag :notes_field_height, @query.notes_field_height, min: 100, max: 1000, step: 10, autocomplete: false %>
      <span id="adjust_notes_field_height_slider"></span>
    </span>
    <span>
      <%= check_box_tag :enable_simple_editor, 1, @query.enable_simple_editor,
        onclick: "IssueNoteList.fn.enableSimpleEditor(this.checked)" %>
      <%= label_tag :enable_simple_editor, l(:label_simple_editor, scope: :issue_note_list) %>
    </span>
    <span>
      <%= label_tag :private_notes_filter, l(:field_private_notes) %>
      <%= select_tag :private_notes_filter, options_for_select([
        [l(:label_contains), 'contains'],
        [l(:label_only, scope: :issue_note_list), 'only'],
        [l(:label_not_contains), 'not_contains']],
        selected: @query.private_notes_filter) %>
    </span>
    <span>
      <%= hidden_field_tag :inline_block_elements, 0, id: "hidden_inline_block_elements" %>
      <%= check_box_tag :inline_block_elements, 1, @query.inline_block_elements %>
      <%= label_tag :inline_block_elements, l(:label_inline_block_elements, scope: :issue_note_list) %>
    </span>
  </p>
  <%= render partial: "queries/query_form" %>
<% end %>
<% if @query.valid? %>
  <% if @issues.empty? %>
    <p class="nodata"><%= l(:label_no_data) %></p>
  <% else %>
    <%= render_query_totals(@query) %>
    <%= render partial: "issue_note_list/list", locals: {issues: @issues, query: @query} %>
    <span class="pagination"><%= pagination_links_full @issue_pages, @issue_count %></span>
  <% end %>
  <% other_formats_links do |f| %>
    <%= f.link_to_with_query_parameters "Atom", key: User.current.atom_key %>
    <%= f.link_to_with_query_parameters "CSV", {}, onclick: "showModal('csv-export-options', '350px'); return false;" %>
    <%= f.link_to_with_query_parameters "PDF" %>
  <% end %>
  <div id="csv-export-options" style="display:none;">
    <h3 class="title"><%= l(:label_export_options, export_format: "CSV") %></h3>
    <%= form_tag(_project_issue_note_list_index_path(@project, format: "csv"), method: :get, id: "csv-export-form") do %>
      <%= query_as_hidden_field_tags(@query) %>
      <%= hidden_field_tag("query_name", @query.name) %>
      <p>
        <label><%= radio_button_tag "c[]", "", true %> <%= l(:description_selected_columns) %></label><br />
        <label><%= radio_button_tag "c[]", "all_inline" %> <%= l(:description_all_columns) %></label>
      </p>
      <% if @query.available_block_columns.any? %>
        <fieldset id="csv-export-block-columns">
          <legend>
            <%= toggle_checkboxes_link("#csv-export-block-columns input[type=checkbox]") %>
          </legend>
          <% @query.available_block_columns.each do |column| %>
            <label><%= check_box_tag "c[]", column.name, @query.has_column?(column), id: nil %> <%= column.caption %></label>
          <% end %>
        </fieldset>
      <% end %>
      <%= export_csv_encoding_select_tag %>
      <% if @issue_count > Setting.issues_export_limit.to_i %>
        <p class="icon icon-warning">
          <%= l(:setting_issues_export_limit) %>: <%= Setting.issues_export_limit.to_i %>
        </p>
      <% end %>
      <p class="buttons">
        <%= submit_tag l(:button_export), name: nil, onclick: "hideModal(this);", data: { disable_with: false } %>
        <%= link_to_function l(:button_cancel), "hideModal(this);" %>
      </p>
    <% end %>
  </div>
<% end %>
<% content_for :sidebar do %>
  <%= render partial: "issues/sidebar" %>
<% end %>
<% content_for :header_tags do %>
  <%= auto_discovery_link_tag(:atom,
                              {query_id: @query, format: "atom",
                                page: nil, key: User.current.atom_key},
                              title: l(:label_issue_plural)) %>
  <%= auto_discovery_link_tag(:atom,
                              {controller: "journals", action: "index",
                                query_id: @query, format: "atom",
                                page: nil, key: User.current.atom_key},
                                title: l(:label_changes_details)) %>
<% end %>
<%= context_menu %>
